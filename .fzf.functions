#!/bin/sh

## FZF Helpers

# fzfe - echo's to stderr all files selected
fzfe() {
  fzf "$@" | tee /dev/stderr
}

## CD

# fzd - including hidden directories
fzd() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m --preview="ls -l {}") &&
    echo cd "$dir" &&
    cd "$dir"
}

# View the history of a file [-d|--diff] for diff only
ghist() {
  DIFF=false
  CHECK_PATH=""
  for ARG in "$@"; do
    if [ "$ARG" = "-d" ] || [ "$arg" = "--diff" ]; then
      DIFF=true
    elif [ -f "$ARG" ]; then
      CHECK_PATH="$ARG"
    fi
  done

  if [ -f "$CHECK_PATH" ]; then
    if [ "$DIFF" = true ]; then
      git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --color=always -- "$CHECK_PATH" |
      fzf --multi --ansi --no-height --preview "git diff {2}~ {2} -- \"$CHECK_PATH\" | diff-so-fancy" |
      true
    else
      git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --color=always -- "$CHECK_PATH" |
      fzf --multi --ansi --no-height --preview "git show {2}:\"$CHECK_PATH\" | bat -p --color always -l \"\${\$(basename $CHECK_PATH)##*.}\"" |
      true
    fi
  fi
}

# Select file from git status
gfi() {
  is_in_git_repo || return
  MERGE_BASE=$(git merge-base HEAD origin/master)
  REF="${1:-$MERGE_BASE}"
  git diff $REF --name-only |
  fzf --no-height --reverse -m --ansi --nth 2..,.. \
    --preview "(git diff $REF -- {-1} | diff-so-fancy)"
}

# Select commit from git history
gh() {
  is_in_git_repo || return
  REF="${1:-HEAD}"
  MERGE_BASE=$(git merge-base HEAD origin/master)
  git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph --color=always $REF |
  fzf --no-height --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show -p | diff-so-fancy' |
  grep -o "[a-f0-9]\{7,\}"
}

# Create useful gitignore files
gitignore() {
  api="curl -L -s https://www.gitignore.io/api"

  if [ "$#" -eq 0 ]; then
    result="$(eval "$api/list" | tr ',' '\n' | fzf --no-height --reverse --multi --preview "$api/{} | bat -p --color always -l gitignore" | paste -s -d "," -)"
    [ -n "$result" ] && eval "$api/$result"
  else
    $api/$*
  fi
}

