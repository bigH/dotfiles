#!/usr/bin/env bash

## FZF Helpers

# fzfe - echo's to stderr all files selected
fzfe() {
  fzf "$@" | tee /dev/stderr
}

## CD

# fcd - including hidden directories
fcd() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m --preview="ls -l {}") &&
    echo cd "$dir" &&
    cd "$dir"
}

if [ -z "$DISABLE_GIT_THINGS" ]; then
  # View the history of a file interactively [-d|--diff] for diff only
  ghist() {
    DIFF=false
    CHECK_PATHS="$@"
    if [ "$1" = "-d" ] || [ "$1" = "--diff" ]; then
      DIFF=true
      shift
      CHECK_PATHS="$@"
    fi

    # TODO this doesn't work with > 1 args
    if [ "$DIFF" = true ] || [ "$#" -gt "1" ]; then
      git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --color=always -- $CHECK_PATHS |
      fzf --multi --ansi --no-height --preview "git diff {2}~ {2} -- $CHECK_PATHS | diff-so-fancy" |
      true
    else
      git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --color=always -- "$CHECK_PATHS" |
      fzf --multi --ansi --no-height --preview "git show {2}:\"$CHECK_PATHS\" | bat -p --color always -l \"\${\$(basename $CHECK_PATHS)##*.}\"" |
      true
    fi
  }

  # Select file from git status
  gfi() {
    is_in_git_repo || return
    MERGE_BASE=$(git merge-base HEAD origin/master)
    REF="${1:-$MERGE_BASE}"
    git diff $REF --name-only |
    fzf --no-height --reverse -m --ansi --nth 2..,.. \
      --preview "(git diff $REF -- {-1} | diff-so-fancy)"
  }

  # Select commit from git history
  gh() {
    is_in_git_repo || return
    REF="${1:-HEAD}"
    MERGE_BASE=$(git merge-base HEAD origin/master)
    git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph --color=always $REF |
    fzf --no-height --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
      --header 'Press CTRL-S to toggle sort' \
      --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show -p | diff-so-fancy' |
    grep -o "[a-f0-9]\{7,\}"
  }

  # Create useful gitignore files
  gitignore() {
    api="curl -L -s https://www.gitignore.io/api"

    if [ "$#" -eq 0 ]; then
      result="$(eval "$api/list" | tr ',' '\n' | fzf --no-height --reverse --multi --preview "$api/{} | bat -p --color always -l gitignore" | paste -s -d "," -)"
      [ -n "$result" ] && eval "$api/$result"
    else
      $api/$*
    fi
  }
fi
