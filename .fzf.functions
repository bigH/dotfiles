## FZF Helpers

# fzfe - echo's to stderr all files selected
fzfe() {
  fzf "$@" | tee /dev/stderr
}

## CD

# fzd - including hidden directories
fzd() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m --preview="ls -l {}") &&
    echo cd "$dir" &&
    cd "$dir"
}

# fvg - open files that have occurrences of search term
fzvg() {
  if [ -z "$1" ]; then
    echo "ERROR: no argument provided."
  else
    ARGV=$1
    vim $(rg -il $ARGV | fzf -0 -1 -m --ansi --preview "cat {} | rg $ARGV --context 3") "+tabdo /$ARGV"
  fi
}

# Select file from git status
gfi() {
  is_in_git_repo || return
  MERGE_BASE=$(git merge-base HEAD origin/master)
  REF="${1:-$MERGE_BASE}"
  git diff $REF --name-only |
  fzf --height 90% --reverse -m --ansi --nth 2..,.. \
    --preview "(git diff $REF -- {-1} | diff-so-fancy)" |
  cut -c4- | sed 's/.* -> //'
}

# Select commit from git history
gh() {
  is_in_git_repo || return
  REF="${1:-HEAD}"
  MERGE_BASE=$(git merge-base HEAD origin/master)
  git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph --color=always $REF |
  fzf --height 90% --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show -p | diff-so-fancy' |
  grep -o "[a-f0-9]\{7,\}"
}

