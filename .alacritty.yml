window:
  decorations: full
  padding:
    x: 5
    y: 5

scrolling:
  history: 100000
  multiplier: 3
  auto_scroll: false

tabspaces: 8

font:
  normal:
    family: "Hasklig"
    style: Regular

  bold:
    family: "Hasklig"
    style: Bold

  italic:
    family: "Hasklig"
    style: Italic

  offset:
    x: 0
    y: 0

  glyph_offset:
    x: 0
    y: 0

  size: 16.0

  use_thin_strokes: true

draw_bold_text_with_bright_colors: true

colors:
  # TODO copy colors from iterm
  # Default colors
  primary:
    background: '0x272727'
    foreground: '0xd5c4a1'

  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text: '0x32302f'
    cursor: '0xd5c4a1'

  # Normal colors
  normal:
    black:   '0x32302f'
    red:     '0xfb4934'
    green:   '0xb8bb26'
    yellow:  '0xfabd2f'
    blue:    '0x83a598'
    magenta: '0xd3869b'
    cyan:    '0x8ec07c'
    white:   '0xd5c4a1'

  # Bright colors
  bright:
    black:   '0x665c54'
    red:     '0xfb4934'
    green:   '0xb8bb26'
    yellow:  '0xfabd2f'
    blue:    '0x83a598'
    magenta: '0xd3869b'
    cyan:    '0x8ec07c'
    white:   '0xfbf1c7'

  indexed_colors:
    - { index: 16, color: '0xfe8019' }
    - { index: 17, color: '0xd65d0e' }
    - { index: 18, color: '0x3c3836' }
    - { index: 19, color: '0x504945' }
    - { index: 20, color: '0xbdae93' }
    - { index: 21, color: '0xebdbb2' }

visual_bell:
  animation: EaseOut
  color: '0xffffff'
  duration: 100

background_opacity: 1.0

key_bindings:
  - { key: V,        mods: Command,       action: Paste                        }
  - { key: C,        mods: Command,       action: Copy                         }
  - { key: Q,        mods: Command,       action: Quit                         }
  - { key: Equals,   mods: Command,       action: IncreaseFontSize             }
  - { key: Minus,    mods: Command,       action: DecreaseFontSize             }
  - { key: H,        mods: Command,       chars: "H"                           }
  - { key: L,        mods: Command,       chars: "L"                           }
  - { key: Return,   mods: Command|Shift, action: ToggleFullscreen             }
  - { key: Key0,     mods: Command,       action: ResetFontSize                }
  - { key: Left,     mods: Shift,         chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control,       chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,           chars: "\x1b[1;3D"                   }
  - { key: Left,                          chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                          chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,         chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control,       chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,           chars: "\x1b[1;3C"                   }
  - { key: Right,                         chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                         chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,         chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control,       chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,           chars: "\x1b[1;3A"                   }
  - { key: Up,                            chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                            chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,         chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control,       chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,           chars: "\x1b[1;3B"                   }
  - { key: Down,                          chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                          chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,         chars: "\x1b[Z"                      }
  - { key: F1,                            chars: "\x1bOP"                      }
  - { key: F2,                            chars: "\x1bOQ"                      }
  - { key: F3,                            chars: "\x1bOR"                      }
  - { key: F4,                            chars: "\x1bOS"                      }
  - { key: F5,                            chars: "\x1b[15~"                    }
  - { key: F6,                            chars: "\x1b[17~"                    }
  - { key: F7,                            chars: "\x1b[18~"                    }
  - { key: F8,                            chars: "\x1b[19~"                    }
  - { key: F9,                            chars: "\x1b[20~"                    }
  - { key: F10,                           chars: "\x1b[21~"                    }
  - { key: F11,                           chars: "\x1b[23~"                    }
  - { key: F12,                           chars: "\x1b[24~"                    }
  - { key: Back,                          chars: "\x7f"                        }
  - { key: Back,     mods: Alt,           chars: "\x1b\x7f"                    }
  - { key: N,        mods: Command,       action: SpawnNewInstance             }
  - { key: Space,    mods: Control,       chars: "\x00"                        }
  - { key: Space,    mods: Alt,           chars: "\x1b "                       }
  - { key: Key1,     mods: Alt,           chars: "\x1b1"                       }
  - { key: Key2,     mods: Alt,           chars: "\x1b2"                       }
  - { key: Key3,     mods: Alt,           chars: "\x1b3"                       }
  - { key: Key4,     mods: Alt,           chars: "\x1b4"                       }
  - { key: Key5,     mods: Alt,           chars: "\x1b5"                       }
  - { key: Key6,     mods: Alt,           chars: "\x1b6"                       }
  - { key: Key7,     mods: Alt,           chars: "\x1b7"                       }
  - { key: Key8,     mods: Alt,           chars: "\x1b8"                       }
  - { key: Key9,     mods: Alt,           chars: "\x1b9"                       }
  - { key: Key0,     mods: Alt,           chars: "\x1b0"                       }
  - { key: A,        mods: Alt|Shift,     chars: "\x1bA"                       }
  - { key: B,        mods: Alt|Shift,     chars: "\x1bB"                       }
  - { key: C,        mods: Alt|Shift,     chars: "\x1bC"                       }
  - { key: D,        mods: Alt|Shift,     chars: "\x1bD"                       }
  - { key: E,        mods: Alt|Shift,     chars: "\x1bE"                       }
  - { key: F,        mods: Alt|Shift,     chars: "\x1bF"                       }
  - { key: G,        mods: Alt|Shift,     chars: "\x1bG"                       }
  - { key: H,        mods: Alt|Shift,     chars: "\x1bH"                       }
  - { key: I,        mods: Alt|Shift,     chars: "\x1bI"                       }
  - { key: J,        mods: Alt|Shift,     chars: "\x1bJ"                       }
  - { key: K,        mods: Alt|Shift,     chars: "\x1bK"                       }
  - { key: L,        mods: Alt|Shift,     chars: "\x1bL"                       }
  - { key: M,        mods: Alt|Shift,     chars: "\x1bM"                       }
  - { key: N,        mods: Alt|Shift,     chars: "\x1bN"                       }
  - { key: O,        mods: Alt|Shift,     chars: "\x1bO"                       }
  - { key: P,        mods: Alt|Shift,     chars: "\x1bP"                       }
  - { key: Q,        mods: Alt|Shift,     chars: "\x1bQ"                       }
  - { key: R,        mods: Alt|Shift,     chars: "\x1bR"                       }
  - { key: S,        mods: Alt|Shift,     chars: "\x1bS"                       }
  - { key: T,        mods: Alt|Shift,     chars: "\x1bT"                       }
  - { key: U,        mods: Alt|Shift,     chars: "\x1bU"                       }
  - { key: V,        mods: Alt|Shift,     chars: "\x1bV"                       }
  - { key: W,        mods: Alt|Shift,     chars: "\x1bW"                       }
  - { key: X,        mods: Alt|Shift,     chars: "\x1bX"                       }
  - { key: Y,        mods: Alt|Shift,     chars: "\x1bY"                       }
  - { key: Z,        mods: Alt|Shift,     chars: "\x1bZ"                       }
  - { key: A,        mods: Alt,           chars: "\x1ba"                       }
  - { key: B,        mods: Alt,           chars: "\x1bb"                       }
  - { key: C,        mods: Alt,           chars: "\x1bc"                       }
  - { key: D,        mods: Alt,           chars: "\x1bd"                       }
  - { key: E,        mods: Alt,           chars: "\x1be"                       }
  - { key: F,        mods: Alt,           chars: "\x1bf"                       }
  - { key: G,        mods: Alt,           chars: "\x1bg"                       }
  - { key: H,        mods: Alt,           chars: "\x1bh"                       }
  - { key: I,        mods: Alt,           chars: "\x1bi"                       }
  - { key: J,        mods: Alt,           chars: "\x1bj"                       }
  - { key: K,        mods: Alt,           chars: "\x1bk"                       }
  - { key: L,        mods: Alt,           chars: "\x1bl"                       }
  - { key: M,        mods: Alt,           chars: "\x1bm"                       }
  - { key: N,        mods: Alt,           chars: "\x1bn"                       }
  - { key: O,        mods: Alt,           chars: "\x1bo"                       }
  - { key: P,        mods: Alt,           chars: "\x1bp"                       }
  - { key: Q,        mods: Alt,           chars: "\x1bq"                       }
  - { key: R,        mods: Alt,           chars: "\x1br"                       }
  - { key: S,        mods: Alt,           chars: "\x1bs"                       }
  - { key: T,        mods: Alt,           chars: "\x1bt"                       }
  - { key: U,        mods: Alt,           chars: "\x1bu"                       }
  - { key: V,        mods: Alt,           chars: "\x1bv"                       }
  - { key: W,        mods: Alt,           chars: "\x1bw"                       }
  - { key: X,        mods: Alt,           chars: "\x1bx"                       }
  - { key: Y,        mods: Alt,           chars: "\x1by"                       }
  - { key: Z,        mods: Alt,           chars: "\x1bz"                       }
  - { key: Period,   mods: Alt,           chars: "\x1b."                       }
  - { key: Key1,     mods: Command,       chars: "\x1b1\x1b. "                 }
  - { key: Key2,     mods: Command,       chars: "\x1b2\x1b. "                 }
  - { key: Key3,     mods: Command,       chars: "\x1b3\x1b. "                 }
  - { key: Key4,     mods: Command,       chars: "\x1b4\x1b. "                 }
  - { key: Key5,     mods: Command,       chars: "\x1b5\x1b. "                 }
  - { key: Key6,     mods: Command,       chars: "\x1b6\x1b. "                 }
  - { key: Key7,     mods: Command,       chars: "\x1b7\x1b. "                 }
  - { key: Key8,     mods: Command,       chars: "\x1b8\x1b. "                 }
  - { key: Key9,     mods: Command,       chars: "\x1b9\x1b. "                 }
    # TODO map Cmd-KeyX as above to the same character combinations in iTerm

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  hide_when_typing: false

  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    #launcher: program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None


selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"
  save_to_clipboard: true

dynamic_title: true

cursor:
  style: Block
  unfocused_hollow: true

live_config_reload: true

shell:
  program: login
  args: ["-fp", "hiren"]

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: None

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

