#!/usr/bin/env bash

remote_vimrc() {
  USAGE="Supported options: --fast-term --slow-term --help"

  while [ $# -gt 0 ]; do
    opt="$1"
    case "$1" in
      "--slow-term" )
        OPT_SLOW_TERM="yes"
        ;;
      "--fast-term" )
        OPT_FAST_TERM="yes"
        ;;
      "--help")
        echo >&2 "$USAGE"
        exit 0
        ;;
      *)
        echo >&2 "${RED}${BOLD}ERROR${NORMAL}: Invalid option: '$1'"
        echo >&2 "$USAGE"
        exit 1
        ;;
    esac
    shift
  done

  echo 'vim () {'
    printf '  command vim -u'
      printf ' <(echo'
        echo " '"
          echo 'set nocompatible'
          echo 'set hidden'

          echo 'syntax enable'

          echo 'set tabstop=4'
          echo 'set shiftwidth=4'

          echo 'set hlsearch'
          echo 'set ignorecase'
          echo 'set smartcase'
          echo 'set infercase'

          echo 'filetype on'
          echo 'filetype plugin on'

          if [ -n "$OPT_FAST_TERM" ]; then
            echo 'set incsearch'
            echo 'if exists("&inccommand") | set inccommand=split | endif'
          fi

          if [ -z "$OPT_SLOW_TERM" ]; then
            echo 'set path+=**'
            echo 'set wildmenu'
            echo 'set wildmode=list:longest,full'

            echo 'if exists("&showcommand") | set showcommand | endif'
          fi

          if [ -n "$OPT_FAST_TERM" ]; then
            echo 'set cursorline'

            echo 'set ruler'

            echo 'set showmode'

            echo 'set relativenumber'
            echo 'set number'
          fi

          echo 'set backspace=indent,eol,start'
          echo 'set autoindent'

          echo 'set splitbelow'
          echo 'set splitright'

          echo 'nmap <silent> <CR> :'

          echo 'nmap <silent> <Space> <Leader>'

          # Move between windows using <M-H/J/K/L> keys
          echo 'nmap <silent> <M-h> :wincmd h<CR>'
          echo 'nmap <silent> <M-j> :wincmd j<CR>'
          echo 'nmap <silent> <M-k> :wincmd k<CR>'
          echo 'nmap <silent> <M-l> :wincmd l<CR>'

          # Split windows using <M-S-H/J/K/L> keys
          echo 'nmap <silent> <M-H> :vsplit<CR>:wincmd h<CR>'
          echo 'nmap <silent> <M-J> :split<CR>'
          echo 'nmap <silent> <M-K> :split<CR>:wincmd k<CR>'
          echo 'nmap <silent> <M-L> :vsplit<CR>'

          # Move Buffers
          echo 'nmap <silent> <C-H> :bfirst!<CR>'
          echo 'nmap <silent> H :bprevious!<CR>'
          echo 'nmap <silent> L :bnext!<CR>'
          echo 'nmap <silent> <C-L> :blast!<CR>'

          # Disable Ex-Mode and map Q to close buffers
          echo 'nnoremap <silent> Q :q<CR>'
          echo 'nnoremap <silent> K <Nop>'

          # since we set hlsearch
          echo 'let @/ = "search_term_placeholder"'

          # Up and down are more logical with g..
          echo 'nnoremap <silent> k gk'
          echo 'nnoremap <silent> j gj'

          # Alt-Enter or <leader><CR> - insert a new-line here
          echo 'nnoremap <silent> <leader><CR> i<CR><Esc>'
          echo 'nnoremap <silent> <M-CR> i<CR><Esc>'

          # Sane Y
          echo 'nnoremap <silent> Y y$'

          # Map K to `NoOp`
          echo 'nnoremap <silent> K <Nop>'

          # Map Q to `NoOp`
          echo 'nnoremap <silent> K <Nop>'

          # `macOS` emulation
          # TODO map <Command-BS> in iTerm/Alacritty
          echo 'imap <silent> <M-BS> <C-W>'

          # `bash` emulation
          echo 'imap <silent> <C-A> <Esc>I'
          echo 'imap <silent> <C-E> <Esc>A'
          echo 'imap <silent> <C-B> <Esc>bi'
          echo 'imap <silent> <C-F> <Esc>wi'
        printf "'"
      printf ')'
    printf ' "$@"'
    echo ''
  echo '}'
}

remote_vimrc "$@"
