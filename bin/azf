#!/usr/bin/env bash

. "$DOT_FILES_DIR/sh_utils.sh"

# shellcheck disable=2016
USAGE='
Usage:

  azf [resource...]

Examples:

  azf                  # top-level browser
  azf network          # select a network resource to drill down into
  azf ad sp            # look at service-principals

Details:

  In most situations, `azf` will use `list` and `show` together to make
  your browsing experience nicer. You can also generally expect that the
  `fzf` prompt will be used in one of these ways:

   - when listing subcommands or resources, to filter the list in the
     usual `fzf` way
   - when showing, to build a `jq` query

Configuration:

  AZF_TEMP_FILES_DIR=<< path to store azure output if needed >>

'

if [ -z "$AZF_TEMP_FILES_DIR" ]; then
  if [ -n "$TMPDIR" ] && [ -d "$TMPDIR" ] && [ -w "$TMPDIR" ]; then
    AZF_TEMP_FILES_DIR="$(cd "$TMPDIR" ; pwd)"
  fi
fi

if [ -z "$AZF_TEMP_FILES_DIR" ]; then
  log_error "expected AZF_TEMP_FILES_DIR or TMPDIR to be set and writeable"
fi

usage() {
  echo "$USAGE"
}

if command_exists fzf; then
  if ! command_exists az; then
    # shellcheck disable=2016
    log_error '`az` not found; it is required for `azf` to work.'
    exit 1
  fi

  if ! command_exists fzf; then
    # shellcheck disable=2016
    log_error '`fzf` not found; it is required for `azf` to work.'
    exit 1
  fi

  FZF_VERSION="$(fzf --version)"
  MIN_FZF_VERSION="0.21"
  if [ "$FZF_VERSION" = "$(echo -e "$FZF_VERSION\n$MIN_FZF_VERSION" | sort -V | head -n1)" ]; then
    # shellcheck disable=2016
    log_warning '`fzf` is too old and may not work properly'
  fi
fi

if [ -n "$TMPDIR" ] && [ -d "$TMPDIR" ] && [ -w "$TMPDIR" ]; then
  temp_file="$(mktemp)"
  az "@$" > "$temp_file" 2>&1
  if [ "$?" == 0 ]; then
    echo "TODO"
  else
    echo "TODO"
  fi
else
  # shellcheck disable=2016
  log_error '$TMPDIR not set. it is required for `azf` to work properly'
fi

