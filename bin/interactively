#!/usr/bin/env bash

. "$DOT_FILES_DIR/sh_utils.sh"

COMMAND_NAME=""
COMMAND=""

i_usage() {
  echo "Interactively try out expressions in commands."
  echo ""
  echo "interactively --command=awk 'cat foo.txt | awk {q}'"
  echo ""
  echo "  -h --help"
  echo "  --name=[command-name] | -n [command-name]"
  echo "    used to differentiate the history of different commands"
  echo ""
  echo "The command-name is not required. If not provided, the first word in"
  echo "the command is used. In the example above, that is \`cat\`."
  echo ""
  echo "Examples:"
  echo "  interactively 'grep {q} file.txt'"
  echo "  interactively 'sed -e {q} file.txt'"
  echo "  interactively 'jq -C {q} file.json'"
}

# read content from the command-line args
i_configure() {
  while [ "$1" != "" ]; do
    PARAM="$(echo "$1" | awk -F= '{print $1}')"
    VALUE="$(echo "$1" | awk -F= '{print $2}')"
    case $PARAM in
      -h | --help)
        i_usage
        exit 0
        ;;
      -n)
        shift
        COMMAND_NAME="$1"
        ;;
      --name)
        COMMAND_NAME="$VALUE"
        ;;
      *)
        COMMAND="$1"
        ;;
    esac
    shift
  done
}

# break if any thing that's required is missing
i_validate() {
  if [ -z "$COMMAND" ]; then
    log_error "you didn't provide a command to run"
    echo
    indent i_usage
    exit 1
  fi
}

i_project() {
  if [ -z "$COMMAND_NAME" ]; then
    # shellcheck disable=2086
    COMMAND_NAME="$(first_param $COMMAND)"
  fi

  if [ -n "$FZF_HISTORY_DIR" ]; then
    HISTORY_FILE="$FZF_HISTORY_DIR/interactively_$COMMAND_NAME"
    mkdir -p "$FZF_HISTORY_DIR"
    touch "$HISTORY_FILE"
  fi
}

i_execute() {
  i_configure "$@"
  i_validate
  i_project

  tac "$HISTORY_FILE" | \
    fzf --phony \
        --history "$HISTORY_FILE" \
        --no-height \
        --preview "$COMMAND" \
        --bind "enter:execute-silent(echo {q} >> $HISTORY_FILE)+reload(tac $HISTORY_FILE)" \
        --bind "tab:replace-query" \
        --bind "esc:print-query"
}

i_execute "$@"
